name: Build, Test, Deploy

on: [push]

jobs:
  info:
    runs-on: ubuntu-latest
    steps:
      - name: Print node info
        run: |
          cat /etc/os-release
  build:
    runs-on: ubuntu-latest
    needs: info
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          sudo apt install pycodestyle
          pip install pylint build
      - name: Build package
        run: |
          python -m build .
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: built-artifacts
          path: dist
          retention-days: 1
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: built-artifacts
          path: dist
      - name: Set version release
        run: |
          VER="$(cat setup.cfg | grep version | cut -d '=' -f 2 | xargs)"
          {
            echo 'COMMIT_MESSAGE<<EOF'
            git log -1 --pretty=%B
            echo EOF
          } >> "$GITHUB_ENV"
          echo "RELEASE_VERSION=$VER" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
      - name: Create release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          tag: ${{ env.RELEASE_VERSION }}
          body: ${{ env.COMMIT_MESSAGE }}
          release_name: v${{ env.RELEASE_VERSION }}
          overwrite: true
          file_glob: true
